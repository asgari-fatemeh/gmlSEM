!Maybe another comment
#Defining variable label
#Either fw or label can be referenced in the formula
group: gender(old=1,young=2)

fw as forweekend
fz as  "forever zero"
fww as   vary at level

#This is not and ambiguty for Parser
as as assure
assure as as as    # assure <> "as as"
assure as as       # asure <> as
as =~ x1 + x2 

b1,...,b6 as beta1,...,beta6
y1,as,y2 as yyy1,yyy2,yyy3
z1,...,z10 as (y1=0),...,(y10=0)

#Default families
family: y binomial(link="logit")
family: y1,...,y10 binomial(link="logit") copula(type="gaussian")

#notation to support vector-valued distributions
#Potential syntax
family: (x1.1,x1.2,x1.3),...,(x9.1,x9.2,x9.3) ordered()
family: (x1.1,x1.2,x1.3) as y1,...,(x9.1,x9.2,x9.3) as y9 tobit(type=4)
family: (x1.1,x1.2,x1.3) as (y11,y12),...,(x9.1,x9.2,x9.3) as (y91,y92) tobit(type=4)

family: z1,...,z5 binomial(link="logit")
family: z6,...,z10 binomial(link="logit")
family: z1,...,z10 copula(type="gaussian")

family: fb zoib(link="logit")      #Produce a warning
family: fz zib(link=c("probit","logit"))

#also
family: y1,...,y10
        z1,...,z9
        binomial()
        copula()



#Hierarchical cluster/MultiLevel SEM
level: school 
level: class within school
level: class within school within cities

level: school(schoolID)
level: Class (classID) within School (SchoolID)

# measurement model
fb,z         vary at level school
fw           varies at level class
y1,y2,y3     vary at level class
y1, ... ,y13 vary at level class


ind60 =~ x1 + x2 + x3 
dem60 =~ y1 + 1*y2 + y3 + y4       
dem60 =~ y1 + ... + y4           
dem65 =~ y5 + y6 + y7 + y8

# regressions
dem60 ~ center(ind60) + beta1*s(x1,bs=NULL)
dem60 ~ center(ind60) + ind60
dem65 ~ ind60 + dem60 + (b11*1 [as cc ]+ b1x* x[ as  cd]|class)

dem60 ~ beta1*center(x1)+...+beta5*center(x5)
dem65 ~ beta1*center(x1)+beta1*center(x2)+...+beta1*center(x5)
ind60 ~ beta1*center(x1)+beta2*center(x2)+...+beta5*center(x5)

#Multiple ellipses in the regression block
y ~ x1+x3+...+x9+y1+...+y9+(x1+...+x9|class)+(a11*x1[as rx1]+...+a19*x9[as rx9]|class)

#Heteroskedasticity
heter: y ~ x1 + x2

# residual (co)variances
y1 ~~ y5
y2 ~~ y4 + y6
y3 ~~ y7
y4 ~~ y8
y6 ~~ y8
dem65 ~~ 1*dem65 #fix variance eq. 1

# intercepts
y1 ~ 1
f1 ~ 1


# model with labeled parameters
y ~ b1*x1 + b2*x2 + b3*x3
z ~ b1*x1 + ... + b5*x5

# constraints
b1 == (b2 + b3)^2
b1 > exp(b2 + b3 + ... + b9)

## Define and monitor new params
# indirect effect (a*b)
ab := a*b
# total effect
total := c + (a*b)


##Multiple Group, adding argument group = "school", group.equal = c("loadings", "intercepts"), 
## except group.partial = c("visual=~x2", "x7~1"))
visual =~ x1 + 0.5*x2 + c(0.6, 0.8)*x3 + c(0.1,NA)*x4
textual =~ x4 + start(c(1.2, 0.6))*x5 + c(a1, a2)*x6
speed =~ x7 + x8 + x9 


#size: is a block used for simulation purpose only
#Syntax=> size: param level (in level param  | (per|each|in each) level)
size: 10 school
size: 3  class per     school
size: 3  team  per     school
size: 3  team  each    school
size: 3  team  in each school
size: 10 student per   class 
size: 3  calss   in    school 1